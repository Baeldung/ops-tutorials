name: CI

on:
    push:
        branches: [gh-actions-demo]
    pull_request:
        branches: [gh-actions-demo]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "20"
            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - run: npm ci
            - name: Build
              run: npm run build --if-present
            - name: Test
              run: npm test
            - name: Upload artifact
              uses: actions/upload-artifact@v3
              with:
                  name: dist
                  path: dist
            - name: Slack Notification
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  text: Build job status is ${{ job.status }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
              if: always()

    deploy-staging:
        needs: build
        runs-on: ubuntu-latest
        environment:
            name: staging
            url: https://staging.example.com
        steps:
            - name: Deploy to staging
              run: echo "Deploying to staging environment"
            - name: Slack Notification
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  text: Staging deployment status is ${{ job.status }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
              if: always()

    deploy-production:
        needs: [build, deploy-staging]
        runs-on: ubuntu-latest
        environment:
            name: production
            url: https://production.example.com
        steps:
            - name: Deploy to production
              run: echo "Deploying to production environment"
            - name: Slack Notification
              uses: 8398a7/action-slack@v3
              with:
                  status: ${{ job.status }}
                  text: Production deployment status is ${{ job.status }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
              if: always()
